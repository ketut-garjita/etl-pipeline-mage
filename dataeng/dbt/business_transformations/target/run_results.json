{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2025-08-25T11:52:57.033385Z", "invocation_id": "82fa40ac-f0b0-4559-9d5f-effdaf490d65", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:46.766033Z", "completed_at": "2025-08-25T11:52:46.779300Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:46.780949Z", "completed_at": "2025-08-25T11:52:48.289371Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 1.544464111328125, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_customer", "compiled": true, "compiled_code": "\n\nSELECT \n    \"Customer Id\" AS Customer_Id,\n    \"Customer Email\" AS Customer_Email,\n    \"Customer Fname\" AS Customer_Fname,\n    \"Customer Lname\" AS Customer_Lname,\n    \"Customer Segment\" AS Customer_Segment,\n    \"Customer City\" AS Customer_City,\n    \"Customer Country\" AS Customer_Country,\n    \"Customer State\" AS Customer_State,\n    \"Customer Street\" AS Customer_Street,\n    \"Customer Zipcode\" AS Customer_Zipcode,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_customer\"\n--WHERE \"Customer Id\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:48.336704Z", "completed_at": "2025-08-25T11:52:48.347059Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:48.348434Z", "completed_at": "2025-08-25T11:52:48.665819Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.4818389415740967, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_department", "compiled": true, "compiled_code": "\n\nSELECT \n    CAST(\"Department Id\" AS INTEGER) AS Department_Id,\n    \"Department Name\" AS Department_Name,\n    \"Market\" AS Market,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_department\"\n--WHERE \"Department Id\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_department\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:48.841898Z", "completed_at": "2025-08-25T11:52:48.852778Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:48.854454Z", "completed_at": "2025-08-25T11:52:49.813792Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.996222972869873, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_location", "compiled": true, "compiled_code": "\n\nSELECT \n    \"Order Zipcode\" AS Order_Zipcode,\n    \"Order City\" AS Order_City,\n    \"Order State\" AS Order_State,\n    \"Order Region\" AS Order_Region,\n    \"Order Country\" AS Order_Country,\n    CAST(\"Latitude\" AS DOUBLE) AS Latitude,\n    CAST(\"Longitude\" AS DOUBLE) AS Longitude,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_location\"\n--WHERE \"Order Zipcode\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_location\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:49.859793Z", "completed_at": "2025-08-25T11:52:49.868968Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:49.870254Z", "completed_at": "2025-08-25T11:52:50.192245Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.4564354419708252, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_metadata", "compiled": true, "compiled_code": "\n\nSELECT \n    \"key\" AS key,\n    CAST(\"offset\" AS INTEGER) AS metadata_offset,\n    CAST(\"partition\" AS INTEGER) AS partition,\n    CAST(\"time\" AS BIGINT) AS time,\n    \"topic\" AS topic,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_metadata\"\n--WHERE \"key\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_metadata\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:50.339674Z", "completed_at": "2025-08-25T11:52:50.349731Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:50.351095Z", "completed_at": "2025-08-25T11:52:51.277559Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.9636833667755127, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_order", "compiled": true, "compiled_code": "\n\nSELECT \n    CAST(\"Order Id\" AS INTEGER) AS Order_Id,\n    --CAST(\"Order date (DateOrders)\" AS TIMESTAMP) AS Order_Date,\n    \"Order date (DateOrders)\" AS Order_Date,\n    CAST(\"Order Customer Id\" AS INTEGER) AS Order_Customer_Id,\n    CAST(\"Order Item Id\" AS INTEGER) AS Order_Item_Id,\n    CAST(\"Product Card Id\" AS INTEGER) AS Product_Card_Id,\n    CAST(\"Order Item Discount\" AS FLOAT) AS Order_Item_Discount,\n    CAST(\"Order Item Discount Rate\" AS FLOAT) AS Order_Item_Discount_Rate,\n    CAST(\"Order Item Product Price\" AS FLOAT) AS Order_Item_Product_Price,\n    \"Order Item Profit Ratio\" AS Order_Item_Profit_Ratio,\n    CAST(\"Order Item Quantity\" AS INTEGER) AS Order_Item_Quantity,\n    CAST(\"Sales per customer\" AS FLOAT) AS Sales_per_customer,\n    CAST(\"Sales\" AS FLOAT) AS Sales,\n    CAST(\"Order Item Total\" AS FLOAT) AS Order_Item_Total,\n    CAST(\"Order Profit Per Order\" AS FLOAT) AS Order_Profit_Per_Order,\n    \"Order Status\" AS Order_Status,\n    CAST(\"Department Id\" AS INTEGER) AS Department_Id,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_order\"\n--WHERE \"Order Id\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_order\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:51.326789Z", "completed_at": "2025-08-25T11:52:51.340488Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:51.341842Z", "completed_at": "2025-08-25T11:52:52.264481Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.974205732345581, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_product", "compiled": true, "compiled_code": "\n\nSELECT \n    CAST(\"Product Card Id\" AS INTEGER) AS Product_Card_Id,\n    CAST(\"Product Category Id\" AS INTEGER) AS Product_Category_Id,\n    \"Category Name\" AS Category_Name,\n    CAST(\"Product Description\" AS VARCHAR) AS Product_Description,\n    \"Product Image\" AS Product_Image,\n    \"Product Name\" AS Product_Name,\n    \"Product Price\" AS Product_Price,\n    CASE \n        WHEN LOWER(\"Product Status\") = 'active' THEN 1\n        WHEN LOWER(\"Product Status\") = 'true' THEN 1\n        WHEN \"Product Status\" = '1' THEN 1\n        ELSE 0\n    END::BIT AS Product_Status,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_product\"\n--WHERE \"Product Card Id\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:52.333904Z", "completed_at": "2025-08-25T11:52:52.344828Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:52.346044Z", "completed_at": "2025-08-25T11:52:52.779277Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.6085984706878662, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.stg_shipping", "compiled": true, "compiled_code": "\n\nSELECT \n    \"Shipping date (DateOrders)\" AS Shipping_date,\n    \"Days for shipping (real)\" AS Days_for_shipping_real,\n    CAST(\"Days for shipment (scheduled)\" AS INTEGER) AS Days_for_shipment_scheduled,\n    \"Shipping Mode\" AS Shipping_Mode,\n    \"Delivery Status\" AS Delivery_Status,\n    CAST(\"Ingestion_Time\" AS TIMESTAMP) AS ingestion_time\nFROM \"warehouse\".\"main\".\"raw_shipping\"\n--WHERE \"Shipping date (DateOrders)\" IS NOT NULL", "relation_name": "\"warehouse\".\"main\".\"stg_shipping\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:52.963381Z", "completed_at": "2025-08-25T11:52:53.392426Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:53.394300Z", "completed_at": "2025-08-25T11:52:53.487253Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.5754308700561523, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.dim_customer", "compiled": true, "compiled_code": "\n\nWITH cleaned AS (\nSELECT \n    Customer_Id AS Customer_Id,\n    LOWER(Customer_Email) AS Customer_Email,\n    UPPER(LEFT(Customer_Fname, 1)) || LOWER(SUBSTR(Customer_Fname, 2)) AS Customer_Fname,\n    UPPER(LEFT(Customer_Lname, 1)) || LOWER(SUBSTR(Customer_Lname, 2)) AS Customer_Lname,\n    Customer_Segment AS Customer_Segment,\n    Customer_City AS Customer_City,\n    Customer_Country AS Customer_Country,\n    Customer_State AS Customer_State,\n    Customer_Street AS Customer_Street,\n    Customer_Zipcode AS Customer_Zipcode\nFROM \"warehouse\".\"main\".\"stg_customer\"\nWHERE Customer_Id IS NOT NULL\n    QUALIFY ROW_NUMBER() OVER (\n    PARTITION BY (\n\tCustomer_Id, \n\tCustomer_Email,\n\tCustomer_Fname,\n\tCustomer_Lname,\n\tCustomer_Segment,\n\tCustomer_City,\n\tCustomer_Country,\n\tCustomer_State,\n\tCustomer_Street,\n\tCustomer_Zipcode)\n\tORDER BY Customer_Id) = 1\n    )\n\nSELECT * FROM cleaned", "relation_name": "\"warehouse\".\"main\".\"dim_customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:53.562806Z", "completed_at": "2025-08-25T11:52:53.575704Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:53.577168Z", "completed_at": "2025-08-25T11:52:53.674318Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.15892672538757324, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.dim_department", "compiled": true, "compiled_code": "\n\nWITH cleaned AS (\nSELECT \n    Department_Id,\n    Department_Name,\n    Market,\n    Ingestion_Time\nFROM \"warehouse\".\"main\".\"stg_department\"\nWHERE Department_Id IS NOT NULL\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY Department_Id, Department_Name, Market) = 1\n)\n\nSELECT * FROM cleaned\nORDER BY Department_Id", "relation_name": "\"warehouse\".\"main\".\"dim_department\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:53.741716Z", "completed_at": "2025-08-25T11:52:53.770044Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:53.771594Z", "completed_at": "2025-08-25T11:52:53.869185Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.18611741065979004, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.dim_location", "compiled": true, "compiled_code": "\n\nselect\n    -- attributes\n    \n    \n    cast(Order_Zipcode as TEXT)\n as order_zipcode,\n    \n    \n    cast(Order_City as TEXT)\n as order_city,\n    \n    \n    cast(Order_State as TEXT)\n as order_state,\n    \n    \n    cast(Order_Region as TEXT)\n as order_region,\n    \n    \n    cast(Order_Country as TEXT)\n as order_country,\n    \n    \n    cast(Latitude as float)\n as latitude,\n    \n    \n    cast(Longitude as float)\n as longitude\n\nfrom \"warehouse\".\"main\".\"stg_location\"", "relation_name": "\"warehouse\".\"main\".\"dim_location\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:53.955125Z", "completed_at": "2025-08-25T11:52:53.995191Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:53.997141Z", "completed_at": "2025-08-25T11:52:54.102847Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.19943547248840332, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.fact_order", "compiled": true, "compiled_code": "\n\nselect\n    -- identifiers\n    \n    \n    cast(Order_Id as integer)\n as order_id,\n    \n    \n    cast(Order_Customer_Id as integer)\n as order_customer_id,\n    \n    \n    cast(Order_Item_Id as integer)\n as order_item_id,\n    \n    \n    cast(Product_Card_Id as integer)\n as product_card_id,\n    \n    \n    cast(Department_Id as integer)\n as department_id,\n    \n    -- attributes\n    \n    \n    cast(Order_Date as TEXT)\n as order_date,\n    \n    \n    cast(Order_Item_Discount as float)\n as order_item_discount,\n    \n    \n    cast(Order_Item_Discount_Rate as float)\n as order_item_discount_rate,\n    \n    \n    cast(Order_Item_Product_Price as float)\n as order_item_product_price,\n    \n    \n    cast(Order_Item_Profit_Ratio as float)\n as order_item_profit_ratio,\n    \n    \n    cast(Order_Item_Quantity as integer)\n as order_item_quantity,\n    \n    \n    cast(Sales_per_customer as float)\n as sales_per_customer,\n    \n    \n    cast(Sales as float)\n as sales,\n    \n    \n    cast(Order_Item_Total as float)\n as order_item_total,\n    \n    \n    cast(Order_Profit_Per_Order as float)\n as order_profit_per_order,\n    \n    \n    cast(Order_Status as TEXT)\n as order_status\n\nfrom \"warehouse\".\"main\".\"stg_order\"", "relation_name": "\"warehouse\".\"main\".\"fact_order\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:54.175159Z", "completed_at": "2025-08-25T11:52:54.204779Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:54.206118Z", "completed_at": "2025-08-25T11:52:54.298190Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.1742396354675293, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.dim_product", "compiled": true, "compiled_code": "\n\nselect\n    -- identifiers\n    \n    \n    cast(Product_Card_Id as integer)\n as product_card_id,\n    \n    \n    cast(Product_Category_Id as integer)\n as product_category_id,\n    \n    -- attributes\n    \n    \n    cast(Category_Name as TEXT)\n as category_name,\n    \n    \n    cast(Product_Description as TEXT)\n as product_description,\n    \n    \n    cast(Product_Image as TEXT)\n as product_image,\n    \n    \n    cast(Product_Name as TEXT)\n as product_name,\n    \n    \n    cast(Product_Price as float)\n as product_price,\n    \n    \n    cast(Product_Status as TEXT)\n as product_status\n\nfrom \"warehouse\".\"main\".\"stg_product\"", "relation_name": "\"warehouse\".\"main\".\"dim_product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:54.374709Z", "completed_at": "2025-08-25T11:52:54.398654Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:54.400341Z", "completed_at": "2025-08-25T11:52:54.497048Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.17180299758911133, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.dim_shipping", "compiled": true, "compiled_code": "\n\nselect\n    -- attributes\n    \n    \n    cast(Shipping_date as TEXT)\n as shipping_date,\n    \n    \n    cast(Days_for_shipping_real as integer)\n as days_for_shipping_real,\n    \n    \n    cast(Days_for_shipment_scheduled as integer)\n as days_for_shipping_scheduled,\n    \n    \n    cast(Shipping_Mode as TEXT)\n as shipping_mode,\n    \n    \n    cast(Delivery_Status as TEXT)\n as delivery_status\n\nfrom \"warehouse\".\"main\".\"stg_shipping\"", "relation_name": "\"warehouse\".\"main\".\"dim_shipping\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:54.573690Z", "completed_at": "2025-08-25T11:52:54.585010Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:54.586492Z", "completed_at": "2025-08-25T11:52:54.720132Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.19608569145202637, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.mart_customer_retention_rate", "compiled": true, "compiled_code": "\n\nWITH month_names AS (\n    SELECT 1 AS month_num, 'January' AS month_name UNION ALL\n    SELECT 2, 'February' UNION ALL\n    SELECT 3, 'March' UNION ALL\n    SELECT 4, 'April' UNION ALL\n    SELECT 5, 'May' UNION ALL\n    SELECT 6, 'June' UNION ALL\n    SELECT 7, 'July' UNION ALL\n    SELECT 8, 'August' UNION ALL\n    SELECT 9, 'September' UNION ALL\n    SELECT 10, 'October' UNION ALL\n    SELECT 11, 'November' UNION ALL\n    SELECT 12, 'December'\n), \nmonthly_customers AS (\n    SELECT\n        EXTRACT(YEAR FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS year,\n        EXTRACT(MONTH FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS month,\n        COUNT(DISTINCT order_customer_id) AS distinct_customers\n    FROM\n        \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY\n        year, month\n)\nSELECT\n    year,\n    mo.month_name,\n    distinct_customers,\n    SUM(distinct_customers) OVER (ORDER BY year, month) AS rolling_customers,\n    round(distinct_customers/(SUM(distinct_customers) OVER (ORDER BY year, month)),2) as customer_retention_rate\nFROM\n    monthly_customers m\nJOIN month_names mo on m.month =mo.month_num\nORDER BY\n    year, month", "relation_name": "\"warehouse\".\"main\".\"mart_customer_retention_rate\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:54.787939Z", "completed_at": "2025-08-25T11:52:54.800090Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:54.801416Z", "completed_at": "2025-08-25T11:52:54.930823Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.2078382968902588, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.mart_fraud_detection", "compiled": true, "compiled_code": "\n\nwith fraud_detection AS (\n    SELECT\n        order_customer_id,\n        AVG(order_item_total) AS avg_order_total,\n        COUNT(*) AS num_orders\n    FROM \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY order_customer_id\n    ORDER BY avg_order_total DESC\n)\n\nselect * from fraud_detection", "relation_name": "\"warehouse\".\"main\".\"mart_fraud_detection\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:55.022890Z", "completed_at": "2025-08-25T11:52:55.035642Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:55.037172Z", "completed_at": "2025-08-25T11:52:55.195034Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.23184657096862793, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.mart_inventory_levels", "compiled": true, "compiled_code": "\n\nWITH month_names AS (\n    SELECT 1 AS month_num, 'January' AS month_name UNION ALL\n    SELECT 2, 'February' UNION ALL\n    SELECT 3, 'March' UNION ALL\n    SELECT 4, 'April' UNION ALL\n    SELECT 5, 'May' UNION ALL\n    SELECT 6, 'June' UNION ALL\n    SELECT 7, 'July' UNION ALL\n    SELECT 8, 'August' UNION ALL\n    SELECT 9, 'September' UNION ALL\n    SELECT 10, 'October' UNION ALL\n    SELECT 11, 'November' UNION ALL\n    SELECT 12, 'December'\n),\n-- Total inventory value over time\ntotal_inventory_value AS (\n    SELECT\n        EXTRACT(YEAR FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS year,\n        EXTRACT(MONTH FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS month,\n        ROUND(SUM(order_item_product_price * order_item_quantity), 2) AS total_inventory_value\n    FROM\n        \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY\n        year, month\n),\n-- Inventory turnover ratio\ninventory_turnover AS (\n    SELECT\n        EXTRACT(YEAR FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS year,\n        EXTRACT(MONTH FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS month,\n        ROUND((SUM(order_item_total) / NULLIF(AVG(order_item_quantity), 0)), 2) AS inventory_turnover_ratio\n    FROM \n        \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY \n        year, month\n),\n-- Inventory aging analysis\ninventory_aging AS (\n    SELECT \n        EXTRACT(YEAR FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS year,\n        EXTRACT(MONTH FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS month,\n        CASE\n            WHEN date_diff('day', strptime(Order_Date, '%Y-%m-%d %H:%M:%S'), date '2018-01-01') <= 30 THEN '0-30 days'\n            WHEN date_diff('day', strptime(Order_Date, '%Y-%m-%d %H:%M:%S'), date '2018-01-01') <= 60 THEN '31-60 days'\n            WHEN date_diff('day', strptime(Order_Date, '%Y-%m-%d %H:%M:%S'), date '2018-01-01') <= 90 THEN '61-90 days'\n            ELSE 'Over 90 days'\n        END AS age_range,\n        ROUND(SUM(order_item_product_price * order_item_quantity), 2) AS inventory_value\n    FROM \n        \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY \n        year, month, age_range\n)\n\nSELECT\n    t.year,\n    m.month_name,\n    t.total_inventory_value,\n    i.inventory_turnover_ratio,\n    a.age_range,\n    a.inventory_value\nFROM \n    total_inventory_value t\nJOIN \n    month_names m ON t.month = m.month_num\nJOIN \n    inventory_turnover i ON t.year = i.year AND t.month = i.month\nLEFT JOIN\n    inventory_aging a ON t.year = a.year AND t.month = a.month\nORDER BY \n    t.year, t.month", "relation_name": "\"warehouse\".\"main\".\"mart_inventory_levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:55.273472Z", "completed_at": "2025-08-25T11:52:55.290148Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:55.291741Z", "completed_at": "2025-08-25T11:52:56.172848Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 1.1610798835754395, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.mart_financial_commitments", "compiled": true, "compiled_code": "\n\n\nWITH order_aggregates AS (\n    SELECT\n        o.department_id,\n        o.product_card_id,\n        SUM(o.order_item_total) AS total_committed_funds,\n        SUM(CASE WHEN o.order_status = 'COMPLETED' THEN 1 ELSE 0 END) AS completed_orders,\n        COUNT(1) AS total_orders\n    FROM (SELECT department_id, product_card_id, order_item_total, order_status FROM \"warehouse\".\"main\".\"fact_order\" LIMIT 50000) o\n    GROUP BY o.department_id, o.product_card_id\n),\ndepartment_market_category AS (\n    SELECT\n        d.department_name,\n        d.market,\n        p.category_name,\n        oa.total_committed_funds,\n        oa.completed_orders,\n        oa.total_orders\n    FROM order_aggregates oa\n    JOIN (SELECT department_id, department_name, market FROM \"warehouse\".\"main\".\"dim_department\" LIMIT 50000) d\n      ON oa.department_id = d.department_id\n    JOIN (SELECT product_card_id, category_name FROM \"warehouse\".\"main\".\"dim_product\" LIMIT 50000) p\n      ON oa.product_card_id = p.product_card_id\n)\nSELECT\n    department_name,\n    market,\n    category_name,\n    total_committed_funds,\n    completed_orders / total_orders AS commitment_fulfillment_rate\nFROM department_market_category", "relation_name": "\"warehouse\".\"main\".\"mart_financial_commitments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:56.465928Z", "completed_at": "2025-08-25T11:52:56.483998Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:56.485469Z", "completed_at": "2025-08-25T11:52:56.648088Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.24965858459472656, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.mart_overall_performance", "compiled": true, "compiled_code": "\n\nWITH month_names AS (\n    SELECT 1 AS month_num, 'January' AS month_name UNION ALL\n    SELECT 2, 'February' UNION ALL\n    SELECT 3, 'March' UNION ALL\n    SELECT 4, 'April' UNION ALL\n    SELECT 5, 'May' UNION ALL\n    SELECT 6, 'June' UNION ALL\n    SELECT 7, 'July' UNION ALL\n    SELECT 8, 'August' UNION ALL\n    SELECT 9, 'September' UNION ALL\n    SELECT 10, 'October' UNION ALL\n    SELECT 11, 'November' UNION ALL\n    SELECT 12, 'December'\n),\noverall_sales_performance AS (\n    SELECT \n        EXTRACT(YEAR FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS year,\n        EXTRACT(MONTH FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS month,\n        ROUND(SUM(order_item_total), 2) AS total_sales,\n        ROUND(SUM(order_profit_per_order), 2) AS total_profit\n    FROM \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY year, month\n),\nprofit_margin_analysis AS (\n    SELECT \n        EXTRACT(YEAR FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS year,\n        EXTRACT(MONTH FROM strptime(order_date, '%Y-%m-%d %H:%M:%S')) AS month,\n        ROUND(AVG(order_profit_per_order), 2) AS avg_profit_margin\n    FROM \"warehouse\".\"main\".\"fact_order\"\n    GROUP BY year, month\n),\noperational_efficiency_metrics AS (\n    SELECT \n        ROUND(AVG(days_for_shipping_real), 2) AS avg_actual_shipment_days,\n        ROUND(AVG(days_for_shipping_scheduled), 2) AS avg_scheduled_shipment_days\n    FROM \"warehouse\".\"main\".\"dim_shipping\"\n)\nSELECT \n    os.year,\n    m.month_name,\n    os.total_sales,\n    os.total_profit,\n    pma.avg_profit_margin,\n    oem.avg_actual_shipment_days,\n    oem.avg_scheduled_shipment_days\nFROM \n    overall_sales_performance os\nJOIN \n    profit_margin_analysis pma ON os.year = pma.year AND os.month = pma.month\nJOIN\n    month_names m ON os.month = m.month_num\nCROSS JOIN \n    operational_efficiency_metrics oem\nORDER BY \n    os.year, os.month", "relation_name": "\"warehouse\".\"main\".\"mart_overall_performance\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-25T11:52:56.740565Z", "completed_at": "2025-08-25T11:52:56.750621Z"}, {"name": "execute", "started_at": "2025-08-25T11:52:56.752256Z", "completed_at": "2025-08-25T11:52:56.883631Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.20547819137573242, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.data_pipeline.mart_payment_delays", "compiled": true, "compiled_code": "\nselect\n    delivery_status,\n    AVG(days_for_shipping_real - days_for_shipping_scheduled) AS avg_payment_delay,\n    COUNT(1) AS count_of_orders\nFROM \"warehouse\".\"main\".\"dim_shipping\"\nGROUP BY delivery_status", "relation_name": "\"warehouse\".\"main\".\"mart_payment_delays\""}], "elapsed_time": 10.719835758209229, "args": {"indirect_selection": "eager", "empty": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_level_file": "debug", "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "source_freshness_run_project_hooks": false, "target": "dev", "version_check": true, "log_file_max_bytes": 10485760, "cache_selected_only": false, "static_parser": true, "defer": false, "favor_state": false, "print": true, "enable_legacy_logger": false, "partial_parse": true, "populate_cache": true, "use_colors_file": true, "exclude": [], "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt -f /tmp/tmp7_idiun_.json", "select": ["staging", "dwh", "marts"], "introspect": true, "log_format": "default", "log_path": "/home/src/dataeng/dbt/business_transformations/logs", "show_resource_report": false, "profiles_dir": "/home/src/dataeng/.profiles_interpolated_temp_95309c43-1c8e-4aba-aaf7-981dbabf0f2c", "printer_width": 80, "vars": {"env": "dev", "execution_date": "2025-08-25T11:52:41.049689", "interval_end_datetime": "2025-08-26T11:52:41.049689", "interval_start_datetime": "2025-08-25T11:52:41.049689", "event": {}, "configuration": {"dbt": {"command": "run"}, "dbt_profile_target": "dev", "dbt_project_name": "dbt/business_transformations", "disable_query_preprocessing": false, "export_write_policy": "append", "file_source": {"path": "dbts/green_myth.yaml"}, "use_raw_sql": false}, "context": {}, "pipeline_uuid": "duckdb_03_dbt_run", "block_uuid": "green_myth", "repo_path": "/home/src/dataeng"}, "write_json": true, "strict_mode": false, "which": "run", "log_format_file": "debug", "partial_parse_file_diff": true, "macro_debugging": false, "project_dir": "/home/src/dataeng/dbt/business_transformations", "log_level": "info", "quiet": false, "use_colors": true}}